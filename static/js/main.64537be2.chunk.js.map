{"version":3,"sources":["containers/Music/Music.js","store/actions.js","components/Dog/Dog.js","containers/DogSpawner/DogSpawner.js","components/Gradient/Gradient.js","components/IntroModal/IntroModal.js","App.js","serviceWorker.js","store/reducers/closeWindowReducer.js","store/reducers/pausePlayReducer.js","store/reducers/windowVisibilityReducer.js","index.js"],"names":["Music","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","playing","volume","soundPlaying","className","playMusic","windowOpen","Sound","status","PLAYING","PAUSED","react_default","a","createElement","type","onClick","pausePlay","lib_default","url","playStatus","playFromPosition","loop","Component","connect","windowClose","musicPlaying","dispatch","Dog","error","isLoaded","dog","dogType","loaded","height","animationDuration","_this2","randomNum","Math","random","fetch","then","res","json","result","match","window","innerHeight","width","innerWidth","setState","renderComponent","animation","dogRender","inlineStyle","divClasses","visibleClasses","src","onLoad","handleImageLoaded","bind","alt","autoPlay","muted","isVisible","screenType","top","concat","left","style","React","windowVisibility","DogSpawner","list","addDog","orientation","prevState","toConsumableArray","components_Dog_Dog","key","Date","now","setInterval","setTimeout","length","newDogs","shift","spawnTime","map","data","index","Gradient","thisNum","gradientArray","tick","assertThisInitialized","requestAnimationFrame","newNum","gradients","pop","unshift","infiniteGradients","randomColor","backgroundImage","getLinearGradient","children","componentClasses","Overlay","hide","closeWindow","push","join","href","App","handleVisibilityChange","visibilityChange","index_es5","onChange","IntroModal_IntroModal","components_Gradient_Gradient","containers_DogSpawner_DogSpawner","containers_Music_Music","value","Boolean","location","hostname","initialState","closeWindowReducer","arguments","undefined","objectSpread","pausePlayReducer","windowVisibilityReducer","action","reducerFunction","combineReducers","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64537be2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Sound from 'react-sound';\r\nimport './Music.css'\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actionTypes from '../../store/actions'\r\n//NEXT: ADD PAUSE/PLAY FUNCTIONS AND MAP THEM INTO STATE.\r\n\r\nclass Music extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playing: true,\r\n      volume: 80,\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let soundPlaying, className;\r\n    //is the sound playing?\r\n    if(this.props.playMusic && !this.props.windowOpen){\r\n      soundPlaying = Sound.status.PLAYING;\r\n      className = \"fas fa-volume-up\"\r\n    } else  {\r\n        soundPlaying = Sound.status.PAUSED;\r\n        className = \"fas fa-volume-mute\"\r\n      }\r\n\r\n\r\n  return(\r\n    <div>\r\n    <button className=\"muteButton\" type=\"button\" onClick={this.props.pausePlay} ><i className={className}/></button>\r\n    <Sound\r\n      url=\"https://github.com/theseanco/infinidog/blob/master/music/rolem_-_Neoishiki.mp3?raw=true\"\r\n      playStatus={soundPlaying}\r\n      playFromPosition={0 /* in milliseconds */}\r\n      volume={70}\r\n      loop={true}\r\n    />\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    windowOpen: state.windowClose.windowOpen,\r\n    playMusic: state.pausePlay.musicPlaying\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    pausePlay: () => dispatch({type:actionTypes.PAUSE_PLAY_MUSIC})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Music)\r\n","export const CLOSE_INTRO_WINDOW = 'CLOSE_INTRO_WINDOW';\r\nexport const PAUSE_PLAY_MUSIC = 'PAUSE_PLAY_MUSIC';\r\nexport const WINDOW_VISIBILITY_CHANGE = 'WINDOW_VISIBILITY_CHANGE';\r\n","/*\r\n\r\nThis component renders a single dog!\r\n\r\n*/\r\n\r\nimport React from 'react'\r\nimport './Dog.css'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Dog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      dog: \"\",\r\n      dogType: '',\r\n      loaded: false,\r\n      height: 0,\r\n      animationDuration: 6\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //on mount, generate random number that will dictate animation length\r\n    const randomNum = (Math.random() * 15) + 6\r\n    //fetch dog picture\r\n    fetch(\"https://random.dog/woof.json\")\r\n    .then(res => res.json())\r\n    .then(res => res.url)\r\n    .then(\r\n      (result) => {\r\n        let dogType\r\n        result.match(/\\.(jpeg|jpg|gif|png|JPG|PNG|JPEG|GIF)$/) === null ? dogType = 'video' : dogType = 'image';\r\n        // console.log(result);\r\n        //height is max 80% of window height, so that dogs don't render offscreen,\r\n        let height = Math.random() * (window.innerHeight*0.8);\r\n        let width = Math.random() * (window.innerWidth * 0.8) - (window.innerWidth * 0.2);\r\n\r\n        //offload results from API call to state\r\n        this.setState({\r\n          isLoaded: true,\r\n          dog: result,\r\n          dogType: dogType,\r\n          height: height,\r\n          width: width,\r\n          renderComponent: true\r\n        })\r\n      }\r\n    )\r\n    //set state to be written to animation duration\r\n    this.setState({animation: randomNum})\r\n    //after 21 seconds (max animation time), render null\r\n  }\r\n\r\n  handleImageLoaded() {\r\n    this.setState({loaded: true})\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      windowOpen\r\n    } = this.props\r\n\r\n    let dogRender,\r\n    divClasses = 'dogDiv paused',\r\n    renderComponent = this.state.renderComponent,\r\n    visibleClasses = '',\r\n    inlineStyle;\r\n\r\n    if(this.state.dogType === 'image') {\r\n      dogRender = <img src={this.state.dog} onLoad={this.handleImageLoaded.bind(this)} alt=\"Dog\"/>\r\n    } else if (this.state.dogType === 'video') {\r\n      dogRender = <video src={this.state.dog} autoPlay loop muted alt=\"Dog Video\"/>\r\n    } else {\r\n      dogRender = null\r\n    }\r\n\r\n    //check if an image is loaded and the intro modal is closed, then apply the right classes\r\n    this.state.loaded && !windowOpen ? divClasses = 'dogDiv' : divClasses = 'dogDiv paused'\r\n    //check if the source file is a video, then apply the right classes\r\n    if(!this.state.loaded && this.state.dogType === 'video') {\r\n      divClasses = 'dogDiv'\r\n    }\r\n    //check if the dog is visible\r\n    this.props.isVisible ? visibleClasses = '' : visibleClasses = 'notVisible';\r\n\r\n    //change style based on orientation\r\n    if(this.props.screenType === 'landscape') {\r\n      inlineStyle = {top: `${this.state.height}px`, animationDuration: `${this.state.animation}s`}\r\n    } else if (this.props.screenType === 'portrait') {\r\n      inlineStyle = {left: `${this.state.width}px`, animationDuration: `${this.state.animation}s`}\r\n    }\r\n\r\n    //conditional rendering - using setTimeout to \"unmount\" components after x seconds\r\n    if (renderComponent) {\r\n      return(\r\n          <div className={`${divClasses} ${visibleClasses}`} style={inlineStyle} >\r\n            {dogRender}\r\n          </div>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    windowOpen: state.windowClose.windowOpen,\r\n    isVisible: state.windowVisibility.isVisible\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(Dog)\r\n","import React, {Component} from 'react';\r\nimport Dog from '../../components/Dog/Dog';\r\nimport { connect } from 'react-redux';\r\n//Use react MediaQueries to pass down an orientation prop to the Dog component.\r\n\r\nclass DogSpawner extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    //list starts with a Dog in it, to get it preloaded.\r\n    this.state = {\r\n      list: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //variables controlling the rate at which dogs are spawned.\r\n    let spawnTime = 1000, maxDogs = 45;\r\n    //a function to add dog to the end of the array\r\n    const addDog = () => {\r\n      let orientation;\r\n\r\n      //Check the window width, and use it to switch between portrait and landscape animations, passed via props to Dog.\r\n      if(window.innerWidth < 768) {\r\n        orientation = \"portrait\"\r\n      } else {\r\n        orientation = \"landscape\"\r\n      }\r\n      /*\r\n\r\n      TODO: In a normal Chrome window, `matches` always returns True, but in Responsive Dev mode it doesn't. Unsure why this is, but maybe changing this to use `window.innerHeight` would work.\r\n      */\r\n      if (this.props.isVisible && !this.props.windowOpen) {\r\n        this.setState((prevState) => ({\r\n          list: [...prevState.list, <Dog key={Date.now()} screenType={orientation} />]\r\n        }))\r\n      }\r\n    }\r\n\r\n    const removeDog = () => {\r\n      //check if the window is visible, if it's not, don't remove stuff.\r\n      if (this.state.list.length >= maxDogs && this.props.isVisible) {\r\n      this.setState((prevState) => {\r\n        let newDogs = prevState.list;\r\n        newDogs.shift();\r\n        return(\r\n          {\r\n            list: newDogs\r\n          })\r\n        })\r\n      }\r\n    }\r\n\r\n      //every 1000 add dog\r\n      setInterval(() => addDog(), spawnTime)\r\n      //wait for 10s, remove a dog every second thereafter\r\n      setTimeout(() => setInterval(() => removeDog(), spawnTime), spawnTime*maxDogs)\r\n      //add a dog when the component has mounted, which will be paused by redux state\r\n      addDog()\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n        {this.state.list.map((data, index) => {\r\n          return (\r\n            data\r\n          )\r\n        })}\r\n        </div>\r\n\r\n      )\r\n    }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    windowOpen: state.windowClose.windowOpen,\r\n    isVisible: state.windowVisibility.isVisible\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(DogSpawner)\r\n","import React from 'react'\r\nimport infiniteGradients from 'infinite-gradients'\r\n\r\nclass Gradient extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //used for the offset\r\n      thisNum: 0,\r\n      //the gradientArray needs to be rotated 'right' when the offset reaches 100.\r\n      gradientArray: ['red','#286554','blue','#9619e2']\r\n    }\r\n\r\n    this.tick = this.tick.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    requestAnimationFrame(this.tick)\r\n  }\r\n\r\n  tick() {\r\n    //This tick is used to re-render the gradient in the next fram\r\n    const oldNum = this.state.thisNum;\r\n    const newNum = (oldNum+1)%100;\r\n    if (newNum === 0) {\r\n      let gradients = this.state.gradientArray;\r\n      //remove last color\r\n      gradients.pop();\r\n      //add random color to the start of the array\r\n      gradients.unshift(infiniteGradients.randomColor())\r\n      // console.log(gradients)\r\n      this.setState({gradientArray: gradients})\r\n    }\r\n    this.setState({thisNum: newNum});\r\n    requestAnimationFrame(this.tick)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n  return(\r\n    <div\r\n    className=\"backgroundDiv\"\r\n      style={{\r\n      backgroundImage: infiniteGradients.getLinearGradient(this.state.gradientArray,this.state.thisNum, 90)\r\n    }}\r\n    >\r\n      {this.props.children}\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Gradient\r\n","import React from 'react';\r\nimport './IntroModal.css';\r\n\r\n//redux goods\r\nimport {connect} from 'react-redux';\r\nimport * as actionTypes from '../../store/actions'\r\n\r\n\r\nconst componentClasses = ['overlay-styling'];\r\n\r\nclass Overlay extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {hide: false}\r\n  }\r\n\r\n  //Setting up CSS transitions for the overlay, using the class show to push an opacity level to overlay-styling\r\n\r\n\r\n  render() {\r\n    const {closeWindow} = this.props\r\n\r\n  if (this.state.hide) {componentClasses.push('hide')};\r\n\r\n  return (\r\n    <div className={componentClasses.join(' ')}>\r\n    <div className=\"flex-container\">\r\n      <div className=\"overlayText\">\r\n       <h1 className=\"vibrate-1\">INFINIDOG</h1>\r\n       <div className=\"descriptionText\">\r\n       <p>\r\n        Dogs, Forever, Set to Chiptune music.\r\n        </p>\r\n        <p>\r\n        Powered by <a href=\"https://random.dog/\">random.dog</a>.\r\n        </p>\r\n        <p>\r\n        Music by <a href=\"http://freemusicarchive.org/music/Rolemusic/~/Neoishiki_1412\">Rolemusic</a>.\r\n        </p>\r\n        <p>\r\n        Code by <a href=\"https://github.com/theseanco/infinidog\">theseanco</a>.\r\n        </p>\r\n\r\n\r\n        <button className=\"closeButton vibrate-2\" onClick={() => {this.setState({hide: true}); closeWindow()}}>Start</button>\r\n       </div>\r\n\r\n     </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    closeWindow: () => dispatch({type:actionTypes.CLOSE_INTRO_WINDOW})\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Overlay)\r\n","import Music from './containers/Music/Music';\r\nimport DogSpawner from './containers/DogSpawner/DogSpawner';\r\nimport Gradient from './components/Gradient/Gradient';\r\nimport IntroModal from './components/IntroModal/IntroModal';\r\nimport PageVisibility from 'react-page-visibility';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from './store/actions.js'\r\n\r\n/*\r\nImport linear gradients API\r\nUse infiniteGradients.getLinearGradient\r\n\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  handleVisibilityChange = isVisible => {\r\n    this.props.visibilityChange(isVisible)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <PageVisibility onChange={this.handleVisibilityChange}>\r\n      <div>\r\n      <div className=\"backgroundDiv\">\r\n      <IntroModal />\r\n      <Gradient>\r\n      <DogSpawner />\r\n      </Gradient>\r\n      <Music />\r\n      </div>\r\n      {/*\r\n      <SoundModule />\r\n      */}\r\n      </div>\r\n      </PageVisibility>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    visibilityChange: (value) => dispatch({type:actionTypes.WINDOW_VISIBILITY_CHANGE, value: value})\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from '../actions'\r\n\r\nconst initialState = {\r\n  windowOpen: true\r\n}\r\n\r\nconst closeWindowReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CLOSE_INTRO_WINDOW:\r\n      return {\r\n        ...state,\r\n        windowOpen: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default closeWindowReducer\r\n","import * as actionTypes from '../actions'\r\n\r\nconst initialState = {\r\n  musicPlaying: true\r\n}\r\n\r\nconst pausePlayReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PAUSE_PLAY_MUSIC:\r\n      return {\r\n        ...state,\r\n        musicPlaying: !state.musicPlaying\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default pausePlayReducer\r\n","import * as actionTypes from '../actions'\r\n\r\nconst initialState = {\r\n  isVisible: true\r\n}\r\n\r\nconst windowVisibilityReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.WINDOW_VISIBILITY_CHANGE:\r\n      return {\r\n        ...state,\r\n        isVisible: action.value\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default windowVisibilityReducer\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, combineReducers } from 'redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport closeWindowReducer from './store/reducers/closeWindowReducer';\r\nimport pausePlayReducer from './store/reducers/pausePlayReducer';\r\nimport windowVisibilityReducer from './store/reducers/windowVisibilityReducer';\r\n\r\nconst reducerFunction = combineReducers({\r\n  windowClose: closeWindowReducer,\r\n  pausePlay: pausePlayReducer,\r\n  windowVisibility: windowVisibilityReducer\r\n})\r\n\r\nconst store = createStore(reducerFunction);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <App />\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}